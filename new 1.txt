U2VsZi1BcHByYWlzYWwgUmV2aWV3IOKAkyBGaW5hbmNpYWwgWWVhciBbWWVhcl0NCktleSBQcm9qZWN0cyBhbmQgQ29udHJpYnV0aW9ucw0KRXBpYyAxOiBFeGFkYXRhIE9iamVjdHMgTWlncmF0aW9uIG9mIFBvcnRhbCBBcHBsaWNhdGlvbg0KDQpQbGF5ZWQgYSBwaXZvdGFsIHJvbGUgaW4gbWlncmF0aW5nIDIxNiBvYmplY3RzIChUcmlnZ2VycywgVHlwZXMsIFRhYmxlcywgUGFja2FnZXMsIFByb2NlZHVyZXMsIFNlcXVlbmNlcywgSW5kZXhlcywgVGFibGVzcGFjZXMsIFN5bm9ueW1zKSBmcm9tIHRoZSBPV05FUl9PUFMgc2NoZW1hIHRvIE9XTkVSX1BSVEwgc2NoZW1hIHRvIGFkZHJlc3Mgc3BhY2UgY29uc3RyYWludHMgYW5kIHNjaGVtYSBleHBvcnQgZmFpbHVyZXMuDQpUZWNobm9sb2dpZXMgVXNlZDogT3JhY2xlLCBIaXZlLCBBdXRvc3lzLCBTY2FsYSwgU3BhcmsuDQpBY2hpZXZlbWVudHM6DQpTdWNjZXNzZnVsbHkgY29tcGxldGVkIGltcGxlbWVudGF0aW9uLCB1bml0IHRlc3RpbmcsIGRlcGxveW1lbnQgdGVzdGluZywgYW5kIGJhdGNoLXJ1biB0ZXN0aW5nIGluIHRoZSBkZXZlbG9wbWVudCBsYW5lLg0KQ29uZHVjdGVkIGJhc2VsaW5lLXJ1biwgaW1wYWN0LXJ1biwgYW5kIHBvcnRhbCBtb2R1bGVzIGJhdGNoIHRlc3RpbmcuDQpJZGVudGlmaWVkIGFuZCBkb2N1bWVudGVkIGJ1Z3MsIHN1Y2ggYXMgaGFyZGNvZGVkIGNvbm5lY3Rpb25zIGluIEdMLVJlY29uIGFuZCBMQ0wgc2NlbmFyaW8gbW9kdWxlcyBhbmQgbWlzc2luZyBsb29rdXAgdmlld3MgaW4gZW1haWwgcmVwb3J0cy4NCkNoYWxsZW5nZXMgRmFjZWQ6DQoNClJlc29sdmVkIGNyaXRpY2FsIGlzc3VlcywgaW5jbHVkaW5nIGNyZWF0aW5nIG1pc3NpbmcgSGl2ZSBkYXRhYmFzZXMsIHN5bmNocm9uaXppbmcgU09SIGRhdGEsIGFuZCBjb3VudGluZyBIaXZlIHRhYmxlIHJlY29yZHMgYmV0d2VlbiBwcm9kdWN0aW9uIGFuZCBkZXYgbGFuZXMuDQpBZGRyZXNzZWQgZGVsYXlzIGR1ZSB0byB2YXVsdGVkIE9yYWNsZSBzY2hlbWEgcGFzc3dvcmRzIGFuZCBzbG93IERCQSB0aWNrZXQgcHJvY2Vzc2luZy4NClJlcXVhbGlmaWVkIG92ZXIgNTArIFNPUiBBdWRpdCBJRHMgZm9yIGRhdGEgY29uc2lzdGVuY3kuDQpFcGljIDI6IEVuaGFuY2VtZW50IOKAkyBEYXRhIFB1Ymxpc2ggVHJpZ2dlcuKAmXMgQXVkaXQgVGFibGUNCg0KSW1wbGVtZW50ZWQgYSByb2J1c3QgYXVkaXQgdGFibGUgd2l0aCBidXNpbmVzcyBydWxlcyBmb3IgdGhlIERhdGEgUHVibGlzaCBUcmlnZ2VyIHBhcmVudCB0YWJsZS4NClRlY2hub2xvZ2llcyBVc2VkOiBPcmFjbGUsIEF1dG9zeXMuDQpBY2hpZXZlbWVudHM6IFN1Y2Nlc3NmdWxseSBkZWxpdmVyZWQgdGhpcyBlbmhhbmNlbWVudCBhY3Jvc3MgRGV2LVFBLCBTSVQsIGFuZCBQcm9kdWN0aW9uIGVudmlyb25tZW50cywgZW5zdXJpbmcgaGlnaCBxdWFsaXR5IGFuZCBhZGhlcmVuY2UgdG8gYnVzaW5lc3MgcmVxdWlyZW1lbnRzLg0KRXBpYyAzOiBTcGlrZSDigJMgV29ya2JlbmNoIFVwc3RyZWFtIFRhYmxlcyBNaWdyYXRpb24gdG8gV0NBRFMgQXBwbGljYXRpb24NCg0KQ29uZHVjdGVkIGEgUE9DIHRvIGZhY2lsaXRhdGUgdGhlIG1pZ3JhdGlvbiBvZiA0NCBpZGVudGlmaWVkIHRhYmxlcyBmcm9tIFdvcmtiZW5jaCB0byB0aGUgV0NBRFMgYXBwbGljYXRpb24sIGVuc3VyaW5nIHRoYXQgdGhlIGV4aXN0aW5nIDEwMCsgdGFibGVzIGNvbnRpbnVlIHRvIGJlIHNvdXJjZWQgZnJvbSBXb3JrYmVuY2guDQpQcm92ZWQgdGhhdCBib3RoIHNvdXJjZXMgKFdvcmtiZW5jaCBhbmQgV0NBRFMpIGNvdWxkIGxvYWQgZGF0YSBpbnRvIHRoZSBEYXRhLUxha2Ugd2hpbGUgbWFpbnRhaW5pbmcgdGhlIHNhbWUgQXVkaXQgSUQgZm9yIGFsbCB0YWJsZXMuDQpUZWNobm9sb2dpZXMgVXNlZDogRUxULCBPcmFjbGUuDQpPdXRjb21lOiBUaGUgUE9DIHdhcyBjb21wbGV0ZWQgc3VjY2Vzc2Z1bGx5LCBhY2hpZXZpbmcgdGhlIGV4cGVjdGVkIHJlc3VsdHMgYW5kIGRlbW9uc3RyYXRpbmcgYSB2aWFibGUgZHVhbC1zb3VyY2UgZGF0YSBsb2FkaW5nIG1lY2hhbmlzbS4NCk90aGVyIE5vdGFibGUgQ29udHJpYnV0aW9uczoNCg0KQ29uZHVjdGVkIHRob3JvdWdoIGludGVybmFsIGNvZGUgcmV2aWV3cyBmb3IgYmFja2VuZCBlcGljcywgZW5zdXJpbmcgY29kZSBxdWFsaXR5IGJlZm9yZSBwcmVzZW50aW5nIHRvIHRoZSBkZXNpZ24gcGFuZWwuDQpTdXBwb3J0ZWQgcHJvZHVjdGlvbiBpc3N1ZSBhbmFseXNpcyBhbmQgcHJvbXB0bHkgY29sbGFib3JhdGVkIHdpdGggdGVhbSBtZW1iZXJzIGFuZCB0aGUgc3VwcG9ydCB0ZWFtIHRvIGFkZHJlc3MgY3JpdGljYWwgaXNzdWVzLg0KUHJvdmlkZWQgc29sdXRpb25zIHRvIHRlc3QtbGFuZSBpc3N1ZXMsIGFzc2lzdGluZyB0aGUgcGxhdGZvcm0gc3VwcG9ydCB0ZWFtIGVmZmVjdGl2ZWx5Lg0KV29ya2VkIG9uIFBPQ3MsIGluY2x1ZGluZyBPcmFjbGUtbWFuYWdlZCBzZXF1ZW5jZSBvYmplY3RzLCBEZWx0YS1UYWJsZSBpbXBsZW1lbnRhdGlvbiwgYW5kIGVuaGFuY2luZyB0aGUgSGl2ZSB0YWJsZSBkYXRhIGNvcHkgdG9vbC4NClJlY29nbml0aW9uIGFuZCBBd2FyZHMNClJlY2VpdmVkIHRoZSBCcm9uemUgQXdhcmQgZm9yIGNvbnRyaWJ1dGlvbnMgdG8gdGhlIEV4YWRhdGEgTWlncmF0aW9uIHByb2plY3QsIHNob3djYXNpbmcgZGVkaWNhdGlvbiBhbmQgdGVjaG5pY2FsIGV4cGVydGlzZS4NCkNoYWxsZW5nZXMgYW5kIExlYXJuaW5nDQpEZXNwaXRlIGRlbGF5cyBhbmQgY2hhbGxlbmdlcyBpbiBjb21wbGV0aW5nIHRoZSBFeGFkYXRhIG1pZ3JhdGlvbiBwcm9qZWN0LCBJIHJlbWFpbmVkIHByb2FjdGl2ZSBpbiByZXNvbHZpbmcgdGVjaG5pY2FsIGlzc3VlcywgY29vcmRpbmF0aW5nIHdpdGggY3Jvc3MtZnVuY3Rpb25hbCB0ZWFtcywgYW5kIGlkZW50aWZ5aW5nIGltcHJvdmVtZW50IGFyZWFzLiBUaGVzZSBleHBlcmllbmNlcyBoYXZlIHN0cmVuZ3RoZW5lZCBteSBwcm9ibGVtLXNvbHZpbmcgYWJpbGl0aWVzIGFuZCBhZGFwdGFiaWxpdHkuDQoNCkFyZWFzIGZvciBJbXByb3ZlbWVudCBhbmQgQWN0aW9uIFBsYW4NCkFnaWxlIFBhcnRpY2lwYXRpb246IEkgd2lsbCBlbnN1cmUgY29uc2lzdGVudCBhdHRlbmRhbmNlIGFuZCBhY3RpdmUgcGFydGljaXBhdGlvbiBpbiBhbGwgQWdpbGUgY2VyZW1vbmllcywgc3VjaCBhcyBEU1UsIFBJIHBsYW5uaW5nLCBhbmQgcmV0cm9zcGVjdGl2ZXMuDQpQcm9jZXNzIEFkaGVyZW5jZTogSSB3aWxsIHN0cmljdGx5IGZvbGxvdyB0aGUgMy8yIHdvcmtpbmcgbW9kZWwgYW5kIGtlZXAgbXkgbWFuYWdlciBpbmZvcm1lZCBvZiBhbnkgZGV2aWF0aW9ucy4NCkVmZmVjdGl2ZSBDb21tdW5pY2F0aW9uOiBCdWlsZGluZyBvbiBteSB3cml0dGVuIGNvbW11bmljYXRpb24gaW1wcm92ZW1lbnRzLCBJIGFpbSB0byBlbmhhbmNlIG9yYWwgY29tbXVuaWNhdGlvbiBza2lsbHMgZHVyaW5nIHRlYW0gbWVldGluZ3MgYW5kIG90aGVyIGZvcnVtcy4NCklubm92YXRpb24gYW5kIFJpc2sgQ29udHJpYnV0aW9uczogSSB3aWxsIGFjdGl2ZWx5IGZvY3VzIG9uIHRhbmdpYmxlIGNvbnRyaWJ1dGlvbnMgdG8gaW5ub3ZhdGlvbiBhbmQgcmlzaywgYWxpZ25pbmcgZWZmb3J0cyB3aXRoIG9yZ2FuaXphdGlvbmFsIG9iamVjdGl2ZXMuDQpQcmlvcml0aXphdGlvbjogSSB3aWxsIGFsaWduIG15IHRhc2tzIHdpdGggcHJvZ3JhbS1sZXZlbCBvYmplY3RpdmVzLCBlZmZlY3RpdmVseSBtYW5hZ2luZyBhZC1ob2MgcmVxdWVzdHMgdG8gYXZvaWQgcHJpb3JpdHkgZGl2ZXJzaW9ucy4NClJpc2sgQXdhcmVuZXNzOiBJIHdpbGwgY29udGludWUgYWRoZXJpbmcgdG8gR0lTIGFuZCBJbmZvU2VjIGd1aWRlbGluZXMgdG8gbWFpbnRhaW4gYSBzdHJvbmcgcmlzayBjdWx0dXJlLg